{
    "name": "hyperf/framework",
    "description": "A coroutine framework that focuses on hyperspeed and flexible, specifically use for build microservices and middlewares.",
    "license": "MIT",
    "keywords": [
        "php",
        "swoole",
        "framework",
        "hyperf",
        "microservice",
        "middleware"
    ],
    "homepage": "https://hyperf.io",
    "support": {
        "docs": "https://hyperf.wiki",
        "issues": "https://github.com/hyperf/hyperf/issues",
        "pull-request": "https://github.com/hyperf/hyperf/pulls",
        "source": "https://github.com/hyperf/hyperf"
    },
    "require": {
        "php": ">=7.2",
        "ext-swoole": ">=4.4",
        "fig/http-message-util": "^1.1.2",
        "hyperf/contract": "~1.1.0",
        "hyperf/utils": "~1.1.0",
        "psr/container": "^1.0",
        "psr/event-dispatcher": "^1.0",
        "psr/log": "^1.0"
    },
    "require-dev": {
        "doctrine/common": "@stable",
        "friendsofphp/php-cs-fixer": "^2.9",
        "malukenho/docheader": "^0.1.6",
        "mockery/mockery": "^1.0",
        "phpunit/phpunit": "^7.0.0"
    },
    "suggest": {
        "hyperf/di": "Required to use Command annotation.",
        "hyperf/dispatcher": "Required to use BootApplication event.",
        "hyperf/command": "Required to use Command annotation.",
        "symfony/event-dispatcher": "Required to use symfony event dispatcher (^4.3)."
    },
    "conflict": {
        "symfony/event-dispatcher": "<4.3"
    },
    "autoload": {
        "psr-4": {
            "Hyperf\\Framework\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "HyperfTest\\Framework\\": "tests/"
        }
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.1-dev"
        },
        "hyperf": {
            "config": "Hyperf\\Framework\\ConfigProvider"
        }
    },
    "bin": [
    ],
    "scripts": {
        "cs-fix": "php-cs-fixer fix $1",
        "test": "phpunit --colors=always"
    }
}
